

//二丶循环队列

#include<stdio.h>
#include<stdlib.h>
#define MAXSIZE 10
typedef struct cirqueue {
	int data[MAXSIZE];
	int front;
	int tail;
	int length;
}queue;
queue* initqueue(){
queue* cqueue = (queue*)malloc(sizeof(queue));
cqueue->front = cqueue->tail =cqueue->length = 0;
return cqueue;
}
void insert(queue* cqueue, int data)
{
	if ((cqueue->tail + 1) % MAXSIZE != cqueue->front)
	{
		cqueue->data[cqueue->tail ] = data;
		cqueue->tail = (cqueue->tail + 1) % MAXSIZE;
		cqueue->length++;
	}
	else
		printf("队列已满，无法入队\n");

}
void deldata(queue* cqueue)
{
	if (cqueue->front != cqueue->tail)
	{
		cqueue->front = (cqueue->front + 1) % MAXSIZE;
		cqueue->length--;
	}
	else
		printf("队列为空，无法出队\n");
}
void print(queue* cqueue)
{
	int i;
	for (i = 0; i < cqueue->length; i++)
		printf("%d ", cqueue->data[(cqueue->front + i) % MAXSIZE]);
	printf("\n");

}
void change(queue*cqueue,int num1,int num2) {
	if (cqueue->length >= num1)
	{
		cqueue->data[(cqueue->front + num1 - 1) % MAXSIZE] = num2;
		printf("将第%d个数改为%d后的队列为\n", num1, num2);
		print(cqueue);

	}
	else
		printf("数据不存在，无法修改\n");

}
void search(queue* cqueue, int data)
{
	int i,j=0 ;
	for (i = 0; i < cqueue->length; i++)
	{
		if (cqueue->data[i] == data)
		{
			printf("数据%d在队列中\n",data);
			j = 1;
			break;
		}
	}
	if (j == 0)
		printf("数据%d不在队列中\n",data);

}

int main()
{
	queue* cqueue = initqueue();
	insert(cqueue, 3);
	insert(cqueue, 6);
	insert(cqueue, 5);
	insert(cqueue, 4);
	insert(cqueue, 7);
	insert(cqueue, 9);
	print(cqueue);
	change(cqueue, 2, 3);
	change(cqueue, 9, 6);
	search(cqueue, 5);
	search(cqueue, 11);
	free(cqueue);
	return 0;
}
